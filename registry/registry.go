package udf

import "errors"

// ErrUDFNotFound is returned by Lookup when an UDF could not be found.
var ErrUDFNotFound = errors.New("UDF not found")

// UDF holds the name and connection hook for a UDF.
// These are normally generated by udfgo.
type UDF struct {
	Name string
	Hook func()
}

var functions = make(map[string]*UDF)

// Register a new function to the UDF module.
// Register is expected to be called from a single goroutine.
func Register(udf *UDF) {
	if _, exists := functions[udf.Name]; exists {
		panic(udf.Name + " has been registered already")
	}
	functions[udf.Name] = udf
}

// Lookup returns a UDF by name if it was registered.
// Otherwise returns ErrUDFNotFound.
func Lookup(name string) (*UDF, error) {
	udf, exists := functions[name]
	if !exists {
		return nil, ErrUDFNotFound
	}
	return udf, nil
}
